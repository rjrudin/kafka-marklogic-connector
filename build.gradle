plugins {
	id 'java'
	id 'net.saliman.properties' version '1.4.6'
	id "com.github.jk1.dependency-license-report" version "1.3"
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	compileOnly "org.apache.kafka:connect-api:2.1.0"
	compile("com.marklogic:ml-javaclient-util:3.10.0") {
		exclude module: "jdom2"
		exclude module: "marklogic-xcc"
		exclude module: "spring-context"
	}

	compile "com.marklogic:marklogic-data-hub:5.0.3"

	testCompile "org.junit.jupiter:junit-jupiter-api:5.3.0"
	testCompile "org.apache.kafka:connect-api:2.1.0"

	// Needed by Gradle 4.6+ - see https://www.petrikainulainen.net/programming/testing/junit-5-tutorial-running-unit-tests-with-gradle/
	testRuntime "org.junit.jupiter:junit-jupiter-engine:5.3.0"

	// Forcing logback to be used for test logging
	testRuntime "ch.qos.logback:logback-classic:1.1.8"
	testRuntime group: "org.slf4j", name: "jcl-over-slf4j", version: "1.7.22"
	testRuntime group: "org.slf4j", name: "slf4j-api", version: "1.7.22"
}

// Needed by Gradle 4.6+ - see https://www.petrikainulainen.net/programming/testing/junit-5-tutorial-running-unit-tests-with-gradle/
test {
	useJUnitPlatform()
}

// Customize the Java plugin's jar task to produce a "fat" jar with all dependencies included
jar {
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	from("src/main/resources") {
		include "META-INF/spring.factories"
	}
}

task copyJarToKafka(type: Copy) {
	description = "Used for local development and testing; copies the jar to your local Kafka install"
	from "build/libs"
	into "${kafkaHome}/libs"
}
copyJarToKafka.mustRunAfter(jar)

task copyPropertyFilesToKafka(type: Copy) {
	description = "Used for local development and testing; copies the properties files to your local Kafka install"
	from "config"
	into "${kafkaHome}/config"
}

task deploy {
	description = "Used for local development and testing; builds the jar and copies it and the properties files to your local Kafka install"
	dependsOn = ["jar", "copyJarToKafka", "copyPropertyFilesToKafka"]
}
